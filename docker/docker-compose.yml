version: "3.4"
services:
  minio:
    image: minio/minio:RELEASE.2021-02-19T04-38-02Z
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: molgenis
      MINIO_SECRET_KEY: molgenis
      MINIO_IDENTITY_OPENID_CLIENT_ID: 'b396233b-cdb2-449e-ac5c-a0d28b38f791'
      MINIO_IDENTITY_OPENID_CONFIG_URL: 'https://auth.molgenis.org/.well-known/openid-configuration'
    command: server /data
    # volumes:
    #   - ./data/:/data
  armadillo:
    image: molgenis/armadillo:latest
    environment:
      SPRING_PROFILES_ACTIVE: development
      MINIO_URL: http://minio
      MINIO_ACCESS_KEY: molgenis
      MINIO_SECRET_KEY: molgenis
      RSERVE_HOST: rserver
      LOGGING_CONFIG: 'classpath:logback-file.xml'
      AUDIT_LOG_PATH: '/app/logs/audit.log'
    # SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: 'https://auth.molgenis.org'
    # SPRING_SECURITY_OAUTH2_RESOURCESERVER_OPAQUETOKEN_CLIENT_ID: 'b396233b-cdb2-449e-ac5c-a0d28b38f791'
    # DATASHIELD_WHITELIST: dsBase,resourcer,dsDanger
    ports:
      - 8080:8080
    volumes:
      - ${PWD}/logs/:/app/logs
  rserver:
    # Use predefined production image:
    image: molgenis/rserver:latest
    # or, if you want to customize the RServe installation,
    # build custom image using Dockerfile:
    # build: ./rserver
    environment:
      DEBUG: "FALSE"
    ports:
      - 6311:6311
  auth:
    # Use predefined production image:
    # You need to activate SPRING_SECURITY_OAUTH2_JWT_ISSUER_URL and SPRING_SECURITY_OAUTH2_OPAQUETOKEN_CLIENT_ID in the armadillo to make the OIDC flow work
    # Drop the SPRING_PROFILES_ACTIVE property
    image: molgenis/molgenis-auth:latest
    environment:
      ISSUER_BASE_URL: 'https://auth.molgenis.org'
      CLIENT_ID: 'b396233b-cdb2-449e-ac5c-a0d28b38f791'
      CLIENT_SECRET: 'xxxxxxx-xxxxxxx-xxxxxxx'
      FUSION_API_TOKEN: 'xxxxxxx-xxxxxxx-xxxxxxx'
      BASE_URL: 'http://localhost:4000'
      APP_SESSION_SECRET: "generate-with-uuid"
    ports:
      - 4000:4000
    profiles: ["oidc"]
